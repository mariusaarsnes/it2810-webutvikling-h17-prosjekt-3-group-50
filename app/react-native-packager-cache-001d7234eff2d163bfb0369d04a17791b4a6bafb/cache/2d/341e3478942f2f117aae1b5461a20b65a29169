Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Slot = undefined;
var _jsxFileName = "/Users/Fredrik/Documents/Webutvikling/it2810-webutvikling-h17-prosjekt-3-group-50/app/components/schedule/Slot.js";

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _Event = require("./Event.js");

var Slot = exports.Slot = function (_React$Component) {
    babelHelpers.inherits(Slot, _React$Component);

    function Slot(props) {
        babelHelpers.classCallCheck(this, Slot);

        var _this = babelHelpers.possibleConstructorReturn(this, (Slot.__proto__ || Object.getPrototypeOf(Slot)).call(this, props));

        _this.i = 0;

        _this.state = {
            color: _this.props.color,
            interval: _this.props.interval
        };

        _this.onIntervalChange = _this.onIntervalChange.bind(_this);
        _this.generateNewEvent = _this.generateNewEvent.bind(_this);
        return _this;
    }

    babelHelpers.createClass(Slot, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: [{ backgroundColor: '' + this.state.color }, styles.slot], __source: {
                        fileName: _jsxFileName,
                        lineNumber: 23
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 24
                        }
                    },
                    _react2.default.createElement(_reactNative.TextInput, { style: [styles.slotInterval, styles.slotIntervalStart],
                        value: this.state.interval[0], onChange: this.onIntervalChange, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 25
                        }
                    }),
                    "-",
                    _react2.default.createElement(_reactNative.TextInput, { style: [styles.slotInterval, styles.slotIntervalEnd],
                        value: this.state.interval[1], onChange: this.onIntervalChange, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 28
                        }
                    })
                ),
                this.generateNewEvent()
            );
        }
    }, {
        key: "generateNewEvent",
        value: function generateNewEvent() {
            return _react2.default.createElement(_Event.Event, { day: this.props.day, slotId: this.props.id, id: this.i, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 39
                }
            });
        }
    }, {
        key: "onIntervalChange",
        value: function onIntervalChange(_ref) {
            var target = _ref.target;


            var classNames = target.className.split(" ");
            var tempInterval = [];
            if (classNames[1] === "slot-interval-start") {
                tempInterval.push(target.value);
                tempInterval.push(this.state.interval[1]);
            } else {
                tempInterval.push(this.state.interval[0]);
                tempInterval.push(target.value);
            }
            this.setState({ color: this.state.color, interval: tempInterval });
        }
    }]);
    return Slot;
}(_react2.default.Component);

var styles = _reactNative.StyleSheet.create({
    slot: {},
    slotInterval: {},
    slotIntervalStart: {},
    slotIntervalEnd: {}
});